generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  surname       String?
  email         String    @unique
  phone         String?
  password      String?
  emailVerified DateTime?
  image         String?
  role          Role      @default(user)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  payments      Payment[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String   @unique
  token      String
  expires    DateTime

  @@id([identifier])
}

model Payment {
  id                 String   @id @default(cuid())
  paymentId          String   @unique
  packageType        PackageType
  dateCreated        DateTime
  dateLastUpdated    DateTime
  moneyReleaseDate   DateTime?
  description        String?
  total              Float
  status             String
  statusDetail       String?
  paymentTypeId      String
  userId             String
  user               User     @relation(fields: [userId], references: [id])
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

enum Role {
  user
  admin
}

enum PackageType {
  pkg_1_yoga
  pkg_4_yoga
  pkg_8_yoga
  pkg_12_yoga
  pkg_1_pilates
  pkg_4_pilates
  pkg_8_pilates
  pkg_12_pilates
}